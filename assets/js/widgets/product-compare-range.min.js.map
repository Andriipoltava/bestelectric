{"version":3,"sources":["product-compare-range.js"],"names":["$","CompareRange","$scope","compareRangesColorBtn","find","length","mouseover","dataColor","jQuery","this","attr","closest","addClass","mouseout","removeClass","append","swiper","Swiper","loop","init","dots","slidesPerView","on","slideChange","data","text","realIndex","sliderIndexF","slides","resize","update","l","console","log","slideContent","navigation","prevEl","nextEl","breakpoints","setTimeout","css","display","document","ready","each","item","_self","window","elementorFrontend","hooks","addAction","$this","min","currentBreakpoint","bl","originalParams"],"mappings":"CAAA,SAAAA,GAEA,MAAAC,aAAA,SAAAC,OAAAF,GAGA,MAAAG,sBAAAD,OAAAE,KAAA,6BAEA,GAAA,IAAAD,sBAAAE,OAEAF,sBAAAG,WAAA,WACA,IAAAC,UAAAC,OAAAC,MAAAC,KAAA,eACA,GAAA,cAAAH,UACAC,OAAAC,MAAAE,QAAA,4BAAAP,KAAA,uCAAAQ,SAAA,qBAEAC,UAAA,WACAL,OAAAC,MAAAE,QAAA,4BAAAP,KAAA,uCAAAU,YAAA,qBAIA,GAAAd,EAAA,gBACAE,OAAAE,KAAA,4BAAAW,OAAAP,OAAA,iBAGA,MAAAQ,OAAA,IAAAC,OAAAf,OAAAE,KAAA,6BAAA,CACAc,KAAA,MACAC,KAAA,KACAC,KAAA,MACAC,cAAA,EACAC,GAAA,CAEAC,YAAA,SAAAC,MAEAtB,OAAAE,KAAA,oCAAAqB,KAAAhB,KAAAiB,UAAAC,aAAAlB,MAAA,IAAAA,KAAAmB,OAAAvB,SAEAwB,OAAA,WACA3B,OAAAE,KAAA,oCAAAqB,KAAAhB,KAAAiB,UAAAC,aAAAlB,MAAA,IAAAA,KAAAmB,OAAAvB,SAEAyB,OAAA,WACA,IAAAC,EAAA7B,OAAAE,KAAA,iCAAAF,OAAAE,KAAA,iCAAAK,KAAAmB,OAAAvB,OAEA2B,QAAAC,MACA/B,OAAAE,KAAA,oCAAAqB,KAAAhB,KAAAiB,UAAAC,aAAAlB,MAAA,IAAAsB,EAAA1B,UAKA6B,aAAA,4BACAC,WAAA,CACAC,OAAA,oCACAC,OAAA,sCAEAC,YAAA,CAEA,IAAA,CACAjB,cAAA,GAIA,IAAA,CACAA,cAAA,GAGA,KAAA,CACAA,cAAA,MAMAkB,YAAA,WACArC,OAAAE,KAAA,6BAAAoC,IAAA,CAAAC,QAAA,UACAzB,OAAAc,SACA5B,OAAAE,KAAA,oCAAAqB,KAAAT,OAAAU,UAAAC,aAAAX,QAAA,IAAAA,OAAAY,OAAAvB,UACA,MAMAL,EAAA0C,UAAAC,OAAA,WACA,GAAA3C,EAAA,8CAAAK,OACAL,EAAA,8CAAA4C,MAAA,SAAAC,MACA,MAAAC,MAAA9C,EAAAS,MACAR,aAAA6C,MAAA9C,WAGAA,EAAA+C,QAAAzB,GAAA,2BAAA,WACA0B,kBAAAC,MAAAC,UAAA,0DAAAjD,oBAOA,SAAA0B,aAAAwB,MAAAC,IAAA,GAEA,IAAArB,EAAAoB,MAAAE,kBAAAC,GACA,GAAA,QAAAvB,EACAuB,GAAAF,SAEAE,GAAAH,MAAAI,eAAAjB,YAAAP,GAAAV,cAGA,GAAAiC,GAAAH,MAAAvB,OAAAvB,OACAiD,GAAAH,MAAAvB,OAAAvB,OAGA,OAAAiD,KA3GA,CA6GA9C","file":"product-compare-range.min.js","sourcesContent":["(function ($) {\n\n    const CompareRange = function ($scope, $) {\n\n\n        const compareRangesColorBtn = $scope.find('.JS--compare-ranges-color');\n\n        if (compareRangesColorBtn.length !== 0) {\n\n            compareRangesColorBtn.mouseover(function () {\n                var dataColor = jQuery(this).attr('data-colour');\n                if (dataColor == 'anthracite') {\n                    jQuery(this).closest(\".JS--compare-ranges-item\").find('.JS--compare-ranges-thumb-secondary').addClass('visible-thumb ');\n                }\n            }).mouseout(function () {\n                jQuery(this).closest(\".JS--compare-ranges-item\").find('.JS--compare-ranges-thumb-secondary').removeClass('visible-thumb ');\n\n            });\n        }\n        if ($('.put_down_js')) {\n            $scope.find('.s-compare-ranges__intro').append(jQuery('.put_down_js'))\n\n        }\n        const swiper = new Swiper($scope.find('.JS-compare-ranges-slider'), {\n            loop: false,\n            init: true,\n            dots: false,\n            slidesPerView: 1,\n            on: {\n\n                slideChange: function (data) {\n\n                    $scope.find('.JS--compare-ranges-nav-fraction').text((this.realIndex + sliderIndexF(this)) + '/' + this.slides.length)\n                },\n                resize: function () {\n                    $scope.find('.JS--compare-ranges-nav-fraction').text((this.realIndex + sliderIndexF(this)) + '/' + this.slides.length)\n                },\n                update: function () {\n                    let l= $scope.find('.swiper-wrapper .swiper-slide')?$scope.find('.swiper-wrapper .swiper-slide'):this.slides.length\n\n                    console.log()\n                    $scope.find('.JS--compare-ranges-nav-fraction').text((this.realIndex + sliderIndexF(this)) + '/' + l.length)\n                },\n\n\n            },\n            slideContent: '.s-compare-ranges__slider',\n            navigation: {\n                prevEl: '.s-compare-ranges__nav-arrow-prev',\n                nextEl: '.s-compare-ranges__nav-arrow-next '\n            },\n            breakpoints: {\n                // when window width is >= 320px\n                767: {\n                    slidesPerView: 2,\n\n                },\n                // when window width is >= 480px\n                992: {\n                    slidesPerView: 3,\n\n                },\n                1440: {\n                    slidesPerView: 4,\n                },\n\n            },\n\n        })\n        setTimeout(function () {\n            $scope.find('.JS-compare-ranges-slider').css({display: 'block'})\n            swiper.update()\n            $scope.find('.JS--compare-ranges-nav-fraction').text((swiper.realIndex + sliderIndexF(swiper)) + '/' + swiper.slides.length)\n        }, 300)\n\n\n    };\n\n\n    $(document).ready(function () {\n        if ($('.elementor-widget-custom-woo-compare-range').length) {\n            $('.elementor-widget-custom-woo-compare-range').each(function (item) {\n                const _self = $(this)\n                CompareRange(_self, $)\n            });\n        } else {\n            $(window).on('elementor/frontend/init', function () {\n                elementorFrontend.hooks.addAction('frontend/element_ready/custom-woo-compare-range.default', CompareRange);\n            });\n        }\n\n\n    })\n\n    function sliderIndexF($this, min = 1) {\n\n        let l = $this.currentBreakpoint, bl\n        if (l === 'max') {\n            bl = min\n        } else{\n            bl = $this.originalParams.breakpoints[l].slidesPerView\n\n        }\n        if (bl > $this.slides.length) {\n            bl = $this.slides.length\n        }\n\n        return bl;\n    }\n})(jQuery);\n\n"]}